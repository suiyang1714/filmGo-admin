{"version":3,"sources":["webpack:///webpack/bootstrap 3b00b1c22a031c4583a6","webpack:///external \"mongoose\"","webpack:///./~/babel-runtime/regenerator/index.js","webpack:///./server/database/schema/flim.js","webpack:///./server/database/schema/genre.js","webpack:///./server/middleware/nodemail.js","webpack:///external \"fs\"","webpack:///external \"request\"","webpack:///./server/database/schema/admin.js","webpack:///./server/database/schema/category.js","webpack:///./server/database/schema/comment.js","webpack:///./server/database/schema/user.js","webpack:///./comingMovieUri.json","webpack:///external \"path\"","webpack:///./nuxt.config.js","webpack:///./server/crawler/index.js","webpack:///./server/database/database.js","webpack:///./server/router/index.js","webpack:///external \"koa\"","webpack:///external \"koa-bodyparser\"","webpack:///external \"koa-session\"","webpack:///external \"koa2-cors\"","webpack:///external \"node-schedule\"","webpack:///external \"nuxt\"","webpack:///./server/config/index.js","webpack:///./server/crawler/crawlerAPI.js","webpack:///./server/middleware/qiniu.js","webpack:///./comingMovie.json","webpack:///./comingMovieStagePhotos.json","webpack:///./comingMovieTrailer.json","webpack:///./comingMovieTrailerDetail.json","webpack:///./server/database/schema ^\\.\\/.*$","webpack:///external \"axios\"","webpack:///external \"bcryptjs\"","webpack:///external \"cheerio\"","webpack:///external \"crypto\"","webpack:///external \"ejs\"","webpack:///external \"koa-router\"","webpack:///external \"node-uuid\"","webpack:///external \"nodemailer\"","webpack:///external \"qiniu\"","webpack:///external \"regenerator-runtime\"","webpack:///external \"request-promise\"","webpack:///./server/index.js"],"names":["mongoose","require","Schema","FilmSchema","title","String","pv","type","Number","default","comment","abstract","year","id","countries","Array","genres","name","source","ref","aka","casts","original_title","summary","directors","releaseDate","runtime","postPic","trailerPoster","trailerArray","like","filmStagePhotos","meta","createdAt","updatedAt","Film","model","module","exports","GenreSchema","filmArray","Date","now","pre","next","isNew","Genre","nodemailer","fs","path","ejs","transporter","createTransport","service","port","secureConnection","auth","user","pass","sendMailFn","sendMsg","template","compile","readFileSync","resolve","__dirname","html","errorMsg","mailOptions","from","to","subject","sendMail","error","info","console","log","messageId","bcrypt","SALT_WORK_FACTOR","MAX_LOGIN_ATTEMPTS","LOCK_TIME","AdminSchema","password","nickname","role","isModified","genSalt","err","salt","hash","methods","comparePassword","_password","Promise","reject","compare","isMatch","incLoginAttempts","that","lockUntil","update","$set","loginAttempts","$unset","updates","$inc","isLocked","Admin","CategorySchema","articleArray","Category","CommentSchema","articleId","reply","content","updateTime","Comment","UserSchema","openid","avatarUrl","unionid","province","country","city","gender","MinaUser","head","charset","hid","link","rel","href","css","loading","color","build","extend","config","ctx","isClient","rules","push","enforce","test","loader","exclude","movieFile","axios","doubanAPI","request","qiniuFn","proxy","proxyConfig","filmDetail","filmTrailerDetail","sleep","time","setTimeout","fetchSingleFilm","filmId","options","method","uri","random","Math","floor","length","response","body","JSON","parse","e","film","fetchFilms","films","i","findOne","subjects","exec","filmData","filmObject","rating","images","all","map","item","index","fetchGenre","_id","genreId","save","genre","genreMsg","indexOf","crawlerDetail","movieName","j","actorAddMsg","k","avatars","splice","l","stagePhotos","trailerMP4","trailerId","trailerTitle","trailerDate","uploadQiniuFile","actorImg","replace","updateMovie","runMovieDetail","runMovieTrailer","runMovieTrailerDetail","runMoviePhotos","timeEnd","models","readdirSync","filter","file","search","forEach","database","set","global","connect","db","connection","on","router","get","find","success","data","errMsg","localhost","url","query","rp","cheerio","uuid","getComingMovie","movieUrl","restartCount","encoding","$","load","decodeEntities","each","actor","attr","match","movie","text","movieMsg","comingMoviesLink","comingMovies","transform","trim","eq","writeFileSync","stringify","getMovieTrailer","trailerUri","trailer","Trailer","toRequest","trailerUrl","v1","getMovieTrailerDetail","comingTrailerLink","getMoviePhotos","photo","qiniu","crypto","accessKey","secretKey","safe64","base64","fileUrl","fileName","genManageToken","pathAndQuery","util","hmacSha1","base64ToUrlSafe","urlsafeBase64Encode","bucket","key","encodedEntry","fetchUrl","targetOptions","headers","app","host","process","env","HOST","PORT","dev","nuxt","builder","use","cors","origin","exposeHeaders","maxAge","credentials","allowMethods","allowHeaders","bodyParser","mongodb","keys","CONFIG","overwrite","httpOnly","signed","rolling","session","scheduleRecurrenceRule","rule","schedule","RecurrenceRule","hour","minute","second","scheduleJob","crawler","filmApi","routes","allowedMethods","status","req","res","render","promise","then","catch","listen","start"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 42);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3b00b1c22a031c4583a6","module.exports = require(\"mongoose\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mongoose\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/regenerator/index.js\n// module id = 1\n// module chunks = 0","const mongoose = require('mongoose')\nconst { Schema } = mongoose\n\nconst FilmSchema = new Schema({\n  title: String,\n  pv: {\n    type: Number,\n    default: 1\n  },\n  comment: {\n    type: Number,\n    default: 0\n  },\n  abstract: String,\n  year: String,\n  id: String,\n  countries: Array,\n  genres: [\n    {\n      name: String,\n      source: {\n        type: String,\n        ref: 'Tag'\n      }\n    }\n  ],\n  aka: Array,\n  casts: Array,\n  original_title: String,\n  summary: String,\n  directors: Array,\n  releaseDate: Array,\n  runtime: String,\n  postPic: String,\n  trailerPoster: String,\n  trailerArray: Array,\n  like: String,\n  filmStagePhotos: Array,\n  meta: {\n    createdAt: {\n      type: String\n    },\n    updatedAt: {\n      type: String\n    }\n  }\n})\n\nconst Film = mongoose.model('Film', FilmSchema)\n\nmodule.exports = Film\n\n\n\n// WEBPACK FOOTER //\n// ./server/database/schema/flim.js","const mongoose = require('mongoose')\nconst { Schema } = mongoose\n\nconst GenreSchema = new Schema({\n  name: String,\n  filmArray: [\n    {\n      type: String,\n      ref: 'Article'\n    }\n  ],\n  meta: {\n    createdAt: {\n      type: Date,\n      default: Date.now()\n    },\n    updatedAt: {\n      type: Date,\n      default: Date.now()\n    }\n  }\n})\nGenreSchema.pre('save', function (next) {\n  if (this.isNew) {\n    this.meta.createdAt = this.meta.updatedAt = Date.now()\n  } else {\n    this.meta.updatedAt = Date.now()\n  }\n\n  next()\n})\n\nconst Genre = mongoose.model('Genre', GenreSchema)\n\nmodule.exports = Genre\n\n\n\n// WEBPACK FOOTER //\n// ./server/database/schema/genre.js","'use strict'\n\nconst nodemailer = require('nodemailer')\nconst fs = require('fs')\nconst path = require('path')\nconst ejs = require('ejs')\n\nlet transporter = nodemailer.createTransport({\n  // host: 'smtp.ethereal.email',\n  service: 'qq', // 使用了内置传输发送邮件 查看支持列表：https://nodemailer.com/smtp/well-known/\n  port: 465, // SMTP 端口\n  secureConnection: true, // 使用了 SSL\n  auth: {\n    user: '171426589@qq.com',\n    // 这里密码不是qq密码，是你设置的smtp授权码\n    pass: 'xmzrcehbkyvbcabi'\n  }\n})\n\nconst sendMailFn = (sendMsg) => {\n  const template = ejs.compile(fs.readFileSync(path.resolve(__dirname, 'email.ejs'), 'utf8'))\n\n  const html = template({\n    errorMsg: sendMsg ? sendMsg.errorMsg : '无错误信息'\n  })\n\n  let mailOptions = {\n    from: '\"FilmGo 定时爬虫启动\" <171426589@qq.com>', // sender address\n    to: 'suiyang_sun@163.com', // list of receivers\n    subject: 'FilmGo 定时爬虫启动了, 预计5min更新完毕，请实时观察', // Subject line\n    html: html\n  }\n  // send mail with defined transport object\n  transporter.sendMail(mailOptions, (error, info) => {\n    if (error) {\n      return console.log(error)\n    }\n    console.log('Message sent: %s', info.messageId)\n    // Message sent: <04ec7731-cc68-1ef6-303c-61b0f796b78f@qq.com>\n  })\n}\n\nmodule.exports = sendMailFn\n\n\n\n// WEBPACK FOOTER //\n// ./server/middleware/nodemail.js","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"request\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"request\"\n// module id = 6\n// module chunks = 0","const mongoose = require('mongoose')\nconst bcrypt = require('bcryptjs')\n\nconst SALT_WORK_FACTOR = 10\nconst MAX_LOGIN_ATTEMPTS = 5\nconst LOCK_TIME = 2 * 60 * 60 * 1000\nconst Schema = mongoose.Schema\n\nconst AdminSchema = new Schema({\n  user: String,\n  password: String,\n  nickname: String,\n  role: {\n    type: String,\n    default: 'user'\n  },\n  meta: {\n    createdAt: {\n      type: Date,\n      default: Date.now()\n    },\n    updatedAt: {\n      type: Date,\n      default: Date.now()\n    }\n  }\n})\n\nAdminSchema.pre('save', function(next) {\n  if (this.isNew) {\n    this.meta.createdAt = this.meta.updatedAt = Date.now()\n  } else {\n    this.meta.updatedAt = Date.now()\n  }\n\n  next()\n})\n\nAdminSchema.pre('save', function(next) {\n  var user = this\n\n  if (!user.isModified('password')) return next()\n\n  bcrypt.genSalt(SALT_WORK_FACTOR, (err, salt) => {\n    if (err) return next(err)\n    bcrypt.hash(user.password, salt, (error, hash) => {\n      if (error) return next(error)\n\n      user.password = hash\n      next()\n    })\n  })\n})\n\nAdminSchema.methods = {\n  comparePassword: function (_password, password) {\n    return new Promise((resolve, reject) => {\n      bcrypt.compare(_password, password, function(err, isMatch) {\n        if (!err) resolve(isMatch)\n        else reject(err)\n      })\n    })\n  },\n\n  incLoginAttempts: function (user) {\n    var that = this\n\n    return new Promise((resolve, reject) => {\n      if (that.lockUntil && that.lockUntil < Date.now()) {\n        that.update({\n          $set: {\n            loginAttempts: 1\n          },\n          $unset: {\n            lockUntil: 1\n          }\n        }, function(err) {\n          if (!err) resolve(true)\n          else reject(err)\n        })\n      }\n      var updates = {\n        $inc: {\n          loginAttempts: 1\n        }\n      }\n      if (that.loginAttempts + 1 >= MAX_LOGIN_ATTEMPTS && !that.isLocked) {\n        updates.$set = {\n          lockUntil: Date.now() + LOCK_TIME\n        }\n      }\n\n      that.update(updates, err => {\n        if (!err) resolve(true)\n        else reject(err)\n      })\n    })\n  }\n}\n\nconst Admin = mongoose.model('Admin', AdminSchema)\n\nmodule.exports = Admin\n\n\n\n// WEBPACK FOOTER //\n// ./server/database/schema/admin.js","const mongoose = require('mongoose')\nconst { Schema } = mongoose\n\nconst CategorySchema = new Schema({\n  name: String,\n  articleArray: [\n    {\n      type: String,\n      ref: 'Article'\n    }\n  ],\n  meta: {\n    createdAt: {\n      type: Date,\n      default: Date.now()\n    },\n    updatedAt: {\n      type: Date,\n      default: Date.now()\n    }\n  }\n})\nCategorySchema.pre('save', function (next) {\n  if (this.isNew) {\n    this.meta.createdAt = this.meta.updatedAt = Date.now()\n  } else {\n    this.meta.updatedAt = Date.now()\n  }\n\n  next()\n})\n\nconst Category = mongoose.model('Category', CategorySchema)\n\nmodule.exports = Category\n\n\n\n// WEBPACK FOOTER //\n// ./server/database/schema/category.js","const mongoose = require('mongoose')\nconst { Schema } = mongoose\n\nconst CommentSchema = new Schema({\n  articleId: {\n    type: String,\n    ref: 'Article'\n  },\n  from: {\n    type: String,\n    ref: 'User'\n  },\n  reply: [{\n    from: {\n      type: String,\n      ref: 'User'\n    },\n    to: {\n      type: String,\n      ref: 'User'\n    },\n    content: String,\n    updateTime: String\n  }],\n  content: String,\n  meta: {\n    createdAt: {\n      type: Date,\n      default: Date.now()\n    },\n    updatedAt: {\n      type: Date,\n      default: Date.now()\n    }\n  }\n})\nCommentSchema.pre('save', function (next) {\n  if (this.isNew) {\n    this.meta.createdAt = this.meta.updatedAt = Date.now()\n  } else {\n    this.meta.updatedAt = Date.now()\n  }\n\n  next()\n})\n\nconst Comment = mongoose.model('Comment', CommentSchema)\n\nmodule.exports = Comment\n\n\n\n// WEBPACK FOOTER //\n// ./server/database/schema/comment.js","const mongoose = require('mongoose')\nconst Schema = mongoose.Schema\n\nconst UserSchema = new Schema({\n  openid: String,\n  avatarUrl: String,\n  nickname: String,\n  role: {\n    type: String,\n    default: 'user'\n  },\n  unionid: String,\n  province: String,\n  country: String,\n  city: String,\n  gender: String,\n  password: {\n    type: String\n  },\n  meta: {\n    createdAt: {\n      type: Date,\n      default: Date.now()\n    },\n    updatedAt: {\n      type: Date,\n      default: Date.now()\n    }\n  }\n})\n\nUserSchema.pre('save', function (next) {\n  if (this.isNew) {\n    this.meta.createdAt = this.meta.updatedAt = Date.now()\n  } else {\n    this.meta.updatedAt = Date.now()\n  }\n\n  next()\n})\n\nconst MinaUser = mongoose.model('MinaUser', UserSchema)\n\nmodule.exports = MinaUser\n\n\n\n// WEBPACK FOOTER //\n// ./server/database/schema/user.js","module.exports = []\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./comingMovieUri.json\n// module id = 11\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 12\n// module chunks = 0","module.exports = {\n  /*\n  ** Headers of the page\n  */\n  head: {\n    title: 'starter',\n    meta: [\n      { charset: 'utf-8' },\n      { name: 'viewport', content: 'width=device-width, initial-scale=1' },\n      { hid: 'description', name: 'description', content: 'Nuxt.js project' }\n    ],\n    link: [\n      { rel: 'icon', type: 'image/x-icon', href: '/favicon.ico' }\n    ]\n  },\n  /*\n  ** Global CSS\n  */\n  css: ['~assets/css/main.css'],\n  /*\n  ** Customize the progress-bar color\n  */\n  loading: { color: '#3B8070' },\n  /*\n   ** Build configuration\n   */\n  build: {\n    /*\n     ** Run ESLINT on save\n     */\n    extend (config, ctx) {\n      if (ctx.isClient) {\n        config.module.rules.push({\n          enforce: 'pre',\n          test: /\\.(js|vue)$/,\n          loader: 'eslint-loader',\n          exclude: /(node_modules)/\n        })\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./nuxt.config.js","const movieFile = require('./crawlerAPI')\nconst axios = require('axios')\nconst doubanAPI = 'http://api.douban.com/v2/movie/'\nconst request = require('request')\nconst qiniuFn = require('../middleware/qiniu')\nconst nodemailer = require('../middleware/nodemail')\n\nconst proxy = ['180.76.188.115','180.76.138.181','180.76.239.106','180.76.166.103','180.76.181.205','180.76.234.215','180.76.106.163','180.76.184.179','180.76.244.38','180.76.113.79','180.76.169.176','180.76.169.122','180.76.106.208','180.76.178.83','180.76.147.196','180.76.112.206',\n  '180.76.233.125','180.76.186.99','180.76.51.74','180.76.234.146','180.76.153.183','180.76.155.233','180.76.57.252','180.76.120.42','180.76.103.107','180.76.58.216','180.76.112.24','180.76.108.218','180.76.98.218','180.76.168.148','180.76.109.38','180.76.249.53',\n  '180.76.59.173','180.76.145.181','180.76.99.7','180.76.59.64','180.76.51.56','180.76.57.82','180.76.233.53','180.76.156.144']\nconst proxyConfig = {\n  port: \"443\",\n  user: \"martindu\",\n  password: \"fy1812!!\"\n}\n\nconst filmDetail = require('../../comingMovie.json')  // 电影封面、演职人员照片\nconst filmStagePhotos = require('../../comingMovieStagePhotos.json') // 剧照\nconst filmTrailerDetail = require('../../comingMovieTrailerDetail.json') // 预告片\n\nconst sleep = async time => await new Promise( resolve => {\n  setTimeout( () => {\n    return resolve(console.log(`等待${time}s`))\n  }, time*1000)\n} )\n\nconst Film = require('../database/schema/flim')\nconst Genre = require('../database/schema/genre')\n\nconst fetchSingleFilm = async (filmId) => {\n  const options = {\n    method: 'GET',\n    uri: `${doubanAPI}subject/${filmId}`\n  }\n  // 代理地址\n  const random = Math.floor(Math.random() * proxy.length)\n  // console.log(`随机数为${random}`)\n  options.proxy = `http://${proxyConfig.user}:${proxyConfig.password}@${proxy[random]}:${proxyConfig.port}`;\n\n  // const film = request(options)\n  const film = await new Promise(resolve => {\n    request(options, (error, response, body) => {\n      try {\n        if (error) throw error\n\n        resolve(JSON.parse(body))\n      } catch (e) {\n        console.log(`单个电影 API 请求失败，准备重新请求ing`)\n        fetchSingleFilm(filmId)\n        // console.log(e)\n        nodemailer(e)\n      }\n    })\n  })\n\n  return film\n}\n\nconst fetchFilms = async () => {\n  let films\n  try {\n    const options = {\n      method: 'GET',\n      uri: `${doubanAPI}coming_soon?count=${filmDetail.length}`\n      // uri: `${doubanAPI}coming_soon?count=100`\n      // uri: `${doubanAPI}coming_soon?count=5`\n    }\n    // 代理地址\n    const random = Math.floor(Math.random() * proxy.length)\n    // console.log(`随机数为${random}`)\n    options.proxy = `http://${proxyConfig.user}:${proxyConfig.password}@${proxy[random]}:${proxyConfig.port}`;\n\n    films = await new Promise(resolve => {\n      request(options, (error, response, body) => {\n        // console.log(body)\n        resolve(JSON.parse(body))\n      })\n    })\n  } catch (e) {\n    console.log(`即将上映电影列表API，请求失败，准备重新请求ing`)\n    fetchFilms()\n    // console.log(e)\n    nodemailer(e)\n  }\n\n  for(let i = 0 ; i < films.subjects.length ; i++) {\n    let filmData = await Film\n      .findOne({id: films.subjects[i].id})\n      .exec()\n    if (!filmData) {\n      // 请求电影信息\n      const film = await fetchSingleFilm(films.subjects[i].id)\n\n      const filmObject = film\n      console.log(`第${i+1}个电影:\"${film.title}\"`)\n      filmData = new Film({\n        title: filmObject.title,\n        rating: filmObject.rating,\n        year: filmObject.year,\n        id: filmObject.id,\n        summary: filmObject.summary,\n        casts: filmObject.casts,\n        original_title: filmObject.original_title,\n        directors: filmObject.directors,\n        images: filmObject.images,\n        countries: filmObject.countries,\n        aka: filmObject.aka\n      })\n\n      // 查询该标签：有 => 返回 tagId || 无 => 新建该标签，返回 tagId\n      await Promise.all(film.genres.map(async (item, index) => {\n        const genreId = await fetchGenre(item, filmData._id)\n        filmData.genres[index] = {\n          name: item,\n          source: genreId\n        }\n        return genreId\n      }))\n      await filmData.save()\n      await sleep(2) // 间歇 2s\n\n    } else {\n      // 请求电影信息\n      const film = await fetchSingleFilm(films.subjects[i].id)\n\n      const filmObject = film\n\n      filmData.title = filmObject.title\n      filmData.rating = filmObject.rating\n      filmData.year = filmObject.year\n      filmData.id = filmObject.id\n      filmData.summary = filmObject.summary\n      filmData.casts = filmObject.casts,\n      filmData.original_title = filmObject.original_title\n      filmData.directors = filmObject.directors\n      filmData.images = filmObject.images\n      filmData.countries = filmObject.countries\n      filmData.aka = filmObject.aka\n\n      await filmData.save()\n      console.log(`第${i+1}个电影:\"${film.title}\"更新完毕`)\n      await sleep(2) // 间歇 2s\n    }\n  }\n  console.log(`电影更新完毕`)\n}\n// 查询类型方法\nconst fetchGenre = (genre, filmId) => {\n  return new Promise(async resolve => {\n    let genreMsg = await Genre\n      .findOne({name: genre})\n      .exec()\n\n    if (!genreMsg) {\n      genreMsg = await new Genre({\n        name: genre\n      })\n\n      genreMsg.filmArray.push(filmId)\n      await genreMsg.save()\n      resolve(genreMsg._id)\n    } else {\n      if (genreMsg.filmArray.indexOf(filmId) === -1) {  // 检测该标签内是否含有该电影的 _id ,按道理说这一步是多余的，先保留看看。\n        genreMsg.filmArray.push(filmId)\n        await genreMsg.save()\n      }\n      resolve(genreMsg._id)\n    }\n  })\n}\n\n// 读取本地爬取电影详细信息添加到数据空中\nconst crawlerDetail = async (ctx, next) => {\n  // 添加爬取的上映日期、播放时长、电影封面\n  await new Promise(async (resolve, reject) => {\n    try {\n      for(let i = 0 ; i < filmDetail.length ; i++) {\n        let film = await Film\n          .findOne({id: filmDetail[i].id})\n          .exec()\n\n        if (film) {\n          film.releaseDate = filmDetail[i].releaseDate // 更新上时间\n          film.runtime = filmDetail[i].runtime  // 更新电影时长\n          film.postPic = filmDetail[i].movieName+'封面图'  // 更新电影poster\n          if (!film.like) film.like = filmDetail[i].like\n          // 更新导演、主演照片\n\n          for(let j= 0 ; j < filmDetail[i].actorAddMsg.length ; j++) {\n            for(let k= 0 ; k < film.directors.length ; k++) {\n              if (film.directors[k].id === filmDetail[i].actorAddMsg[j].id) {\n                let item = film.directors[k]\n                item.avatars = filmDetail[i].actorAddMsg[j].id+'castImg.jpg'\n                film.directors.splice(k, 1, item)\n              }\n            }\n            for(let l= 0 ; l < film.casts.length ; l++) {\n              if (film.casts[l].id === filmDetail[i].actorAddMsg[j].id) {\n                let item = film.casts[l]\n                item.avatars = filmDetail[i].actorAddMsg[j].id+'castImg.jpg'\n                film.casts.splice(l, 1, item)\n              }\n            }\n          }\n\n          await film.save()\n        }\n      }\n    } catch (e) {\n      console.log(e)\n      nodemailer(e)\n    }\n    console.log(`电影缺失上映日期、播放时长、电影封面信息补充完毕`)\n    return resolve()\n  })\n  // 添加爬取的电影剧照\n  await new Promise(async (resolve, reject) => {\n    for(let i = 0 ; i < filmStagePhotos.length ; i++) {\n      const film = await Film\n        .findOne({id: filmStagePhotos[i].id})\n        .exec()\n\n      if (film) {\n        for( let j = 0 ; j < filmStagePhotos[i].stagePhotos.length ; j++) {\n          film.filmStagePhotos.push(`${filmStagePhotos[i].id}${j}stagePhotoImg.jpg`)\n        }\n        await film.save()\n      }\n    }\n\n    console.log(`电影剧照补充完毕`)\n    return resolve()\n  })\n\n  // 预告片详情\n  await new Promise(async (resolve, reject) => {\n\n    for(let i = 0 ; i < filmTrailerDetail.length ; i++) {\n      const film = await Film\n        .findOne({id: filmTrailerDetail[i].id})\n        .exec()\n\n      if (film) {\n        try {\n          for (let j = 0; j < filmTrailerDetail[i].trailerArray.length; j++) {\n            film.trailerArray.push({\n              trailerMP4: `${filmTrailerDetail[i].trailerArray[j].trailerId}视频`,\n              trailerTitle: `${filmTrailerDetail[i].trailerArray[j].trailerTitle}`,\n              trailerDate: `${filmTrailerDetail[i].trailerArray[j].trailerDate}`,\n              trailerPoster: `${filmTrailerDetail[i].trailerArray[j].trailerId}封面图`,\n              trailerId: filmTrailerDetail[i].trailerArray[j].trailerId\n            })\n          }\n        } catch (e) {\n          console.log(e)\n          nodemailer(e)\n        }\n        await film.save()\n      }\n    }\n\n    console.log(`电影预告片详情补充完毕`)\n    return resolve()\n  })\n}\n\nconst uploadQiniuFile = async () => {\n  for(let i = 0 ; i < filmDetail.length ; i++) {\n    // 上传电影封面照\n    qiniuFn.uploadQiniuFile(filmDetail[i].postPic, `${filmDetail[i].movieName}封面图`)\n    for (let j = 0; j < filmDetail[i].actorAddMsg.length; j++) {\n      // 上传电影主演照片\n      qiniuFn.uploadQiniuFile(filmDetail[i].actorAddMsg[j].actorImg, `${filmDetail[i].actorAddMsg[j].id}castImg.jpg`)\n    }\n  }\n\n  for(let i = 0 ; i < filmStagePhotos.length ; i++) {\n    // 剧照\n    try {\n      for (let j = 0; j < filmStagePhotos[i].stagePhotos.length; j++) {\n        await qiniuFn.uploadQiniuFile(filmStagePhotos[i].stagePhotos[j], `${filmStagePhotos[i].id}${j}stagePhotoImg.jpg`) // 缩略图\n        await qiniuFn.uploadQiniuFile(filmStagePhotos[i].stagePhotos[j].replace(/sqxs/, 'l'), `${filmStagePhotos[i].id}${j}stagePhotoImgBig.jpg`) // 大图\n      }\n    } catch (e) {\n      nodemailer(e)\n      console.log(e)\n    }\n  }\n\n\n  for(let i = 0 ; i < filmTrailerDetail.length ; i++) {\n    try {\n      for (let j = 0; j < filmTrailerDetail[i].trailerArray.length; j++) {\n        await qiniuFn.uploadQiniuFile(filmTrailerDetail[i].trailerArray[j].trailerPoster, `${filmTrailerDetail[i].trailerArray[j].trailerId}${j}封面图`)\n        await qiniuFn.uploadQiniuFile(filmTrailerDetail[i].trailerArray[j].trailerMP4, `${filmTrailerDetail[i].trailerArray[j].trailerId}${j}视频`)\n      }\n    } catch (e) {\n      nodemailer(e)\n      console.log(e)\n    }\n  }\n}\n/* 定时更新内容 */\nconst updateMovie = async () => {\n  console.time(\"sort\");\n  await movieFile.runMovieDetail()\n  await movieFile.runMovieTrailer()\n  await movieFile.runMovieTrailerDetail()\n  await movieFile.runMoviePhotos()\n  await fetchFilms()\n  await crawlerDetail()\n  await uploadQiniuFile()\n  console.timeEnd(\"sort\");\n}\nmodule.exports = updateMovie\n\n\n\n// WEBPACK FOOTER //\n// ./server/crawler/index.js","var fs = require('fs')\nvar resolve = require('path').resolve\nvar mongoose = require('mongoose')\nvar config = require('../config')\n\n/*const models = resolve(__dirname, './schema')\nfs.readdirSync(models)\n  .filter(file => ~file.search(/^[^\\.].*js$/))\n  .forEach(file => require(resolve(models, file)))*/\nconst models = resolve(__dirname, '../database/schema')\nfs.readdirSync(models)\n  .filter(file => ~file.search(/^[^\\.].*js$/))\n  .forEach(file => {\n    require(`../database/schema/${file}`)\n    // require(resolve(models,file))\n  })\n\nconst database = () => {\n\n    mongoose.set('debug', true)\n\n    mongoose.Promise = global.Promise\n\n    mongoose.connect(config.db)\n\n    mongoose.connection.on('disconnected', () => {\n        mongoose.connect(config.db)\n    })\n    mongoose.connection.on('error', err => {\n        console.error(err)\n    })\n\n    mongoose.connection.on('open', async () => {\n\n      console.log('Connected to MongoDB ', config.db)\n\n      const Admin = mongoose.model('Admin')\n      let user = await Admin.findOne({\n        user: 'admin'\n      })\n\n      if (!user) {\n        console.log('写入管理员数据')\n\n        user = new Admin({\n          user: 'admin',\n          password: '123456',\n          role: 'superAdmin',\n          nickname: 'Aditya Sui'\n        })\n\n        await user.save()\n      }\n\n    })\n\n}\n\nmodule.exports = database\n\n\n\n// WEBPACK FOOTER //\n// ./server/database/database.js","const router = require('koa-router')()\n\nconst Film = require('../database/schema/flim')\nconst Genre = require('../database/schema/genre')\n\nrouter.get('/api/film/comingsoon', async (ctx, next) => {\n  try {\n    let films = await Film\n      .find()\n      .exec()\n    ctx.body = {\n      success: true,\n      data: films\n    }\n  } catch (e) {\n    let errMsg = {\n      localhost: ctx.url,\n      errorMsg: e\n    }\n\n    ctx.error(10001, errMsg)\n  }\n})\nrouter.get('/api/film/id', async (ctx, next) => {\n  const id = ctx.query.id\n  if (!id) {\n    let errMsg = {\n      localhost: ctx.url,\n      errorMsg: `id为空`\n    }\n    ctx.error(10000, errMsg)\n  }\n  const film = await Film\n    .findOne({id: id})\n    .exec()\n  ctx.body = {\n    success: true,\n    data: film\n  }\n})\nrouter.get('/api/film/poster/id', async (ctx, next) => {\n  const { filmId } = ctx.query\n  if (!filmId) {\n    let errMsg = {\n      localhost: ctx.url,\n      errorMsg: `filmId 为空`\n    }\n    ctx.error(10000, errMsg)\n  }\n  const film = await Film\n    .findOne({id: filmId}, 'title releaseDate trailerArray like id')\n    .exec()\n\n  ctx.body = {\n    success: true,\n    data: film\n  }\n})\n\nmodule.exports = router\n\n\n\n// WEBPACK FOOTER //\n// ./server/router/index.js","module.exports = require(\"koa\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa\"\n// module id = 17\n// module chunks = 0","module.exports = require(\"koa-bodyparser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-bodyparser\"\n// module id = 18\n// module chunks = 0","module.exports = require(\"koa-session\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-session\"\n// module id = 19\n// module chunks = 0","module.exports = require(\"koa2-cors\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa2-cors\"\n// module id = 20\n// module chunks = 0","module.exports = require(\"node-schedule\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"node-schedule\"\n// module id = 21\n// module chunks = 0","module.exports = require(\"nuxt\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"nuxt\"\n// module id = 22\n// module chunks = 0","const config = {\n  db:'mongodb://127.0.0.1/filmgo'\n}\n\nmodule.exports = config\n\n\n\n// WEBPACK FOOTER //\n// ./server/config/index.js","const rp =  require('request-promise')\nconst cheerio =  require('cheerio') // Node.js版本的jquery\nconst fs = require('fs')\n// const iconv = require('iconv-lite') // 文件编码转换\nconst request = require(\"request\")\n// const proxyIP = require('../middleware/request')\nconst uuid = require('node-uuid')\nconst nodemailer = require('../middleware/nodemail')\n\nconst sleep = async time => await new Promise( resolve => {\n    setTimeout( () => {\n        return resolve(console.log(`等待${time}s`))\n    }, time*1000)\n} )\n\nconst proxy = ['180.76.188.115','180.76.138.181','180.76.239.106','180.76.166.103','180.76.181.205','180.76.234.215','180.76.106.163','180.76.184.179','180.76.244.38','180.76.113.79','180.76.169.176','180.76.169.122','180.76.106.208','180.76.178.83','180.76.147.196','180.76.112.206',\n  '180.76.233.125','180.76.186.99','180.76.51.74','180.76.234.146','180.76.153.183','180.76.155.233','180.76.57.252','180.76.120.42','180.76.103.107','180.76.58.216','180.76.112.24','180.76.108.218','180.76.98.218','180.76.168.148','180.76.109.38','180.76.249.53',\n  '180.76.59.173','180.76.145.181','180.76.99.7','180.76.59.64','180.76.51.56','180.76.57.82','180.76.233.53','180.76.156.144']\nconst proxyConfig = {\n  port: \"443\",\n  user: \"martindu\",\n  password: \"fy1812!!\"\n}\n\n/*\n* 1. 即将上映电影 url 爬取 runMovieDetail\n* 2. 即将上映电影缺失信息爬取 getComingMovie\n* 根据 url 爬取电影的 poster、上映日期、片长、制作国家等信息\n* */\nconst getComingMovie = async ({movieUrl, restartCount = 0} = {}) => {\n  const options = {\n    method: 'GET',\n    uri: movieUrl.url,\n    encoding: \"utf-8\"\n  }\n  // 代理地址\n  const random = Math.floor(Math.random() * proxy.length)\n  // console.log(`随机数为${random}`)\n  options.proxy = `http://${proxyConfig.user}:${proxyConfig.password}@${proxy[random]}:${proxyConfig.port}`;\n\n  // request 请求\n  const movieMsg =  await new Promise( resolve => {\n    request(options, async function (error, response, body) {\n      let $\n      try {\n        if (error) throw error;\n         $ = cheerio.load(body,{decodeEntities: false})\n      } catch (e) {\n        nodemailer(e)\n        console.log(`爬取《${movieUrl.title}》失败，准备重新开始爬取\\n错误日志${e}\\n重启次数为${restartCount}`)\n        // console.error(e);\n      }\n      if ($) {\n        let releaseDate = []\n        $('#info span[property=\"v:initialReleaseDate\"]').each(function () {\n          releaseDate.push($(this).html())\n        })\n        let runtime = []\n        $('#info span[property=\"v:runtime\"]').each(function () {\n          runtime.push($(this).html())\n        })\n        let casts = []\n        $('.celebrities-list .celebrity').each(function () {\n          const actor = $(this).find('.avatar').attr('style')\n          const id = $(this).find('a').attr('href')\n          if (actor) {\n            casts.push({\n              actorImg: actor.match(/background-image: url\\((\\S*)\\)/)[1],\n              id: id.match(/\\/celebrity\\/(\\S*)\\//)[1]\n            })\n          }\n        })\n\n        const movie = {\n          movieName: $('span[property=\"v:itemreviewed\"]').text(),\n          releaseDate: releaseDate,\n          runtime: runtime,\n          postPic: $('#mainpic img').attr('src'),\n          id: movieUrl.url.match(/\\/subject\\/(\\S*)\\//)[1],\n          actorAddMsg: casts,\n          like: movieUrl.like\n        }\n\n        resolve(movie)\n      } else {\n        /*\n        *  需要限制重启次数，目前只能重启 4 次\n        *  超过 4 次将发送邮件通知\n        * */\n        restartCount++\n        if (restartCount < 5) {\n          await sleep(2) // 重新请求间歇 2s\n          const movie = await getComingMovie({movieUrl: movieUrl, restartCount: restartCount})\n          resolve(movie)\n        } else {\n          console.log(`目前重启次数为${restartCount}, 重复次数过多，不可抗拒因素，将发起邮件通知`)\n          resolve(`爬取失败，重启次数为${restartCount}`)\n        }\n      }\n    })\n  })\n  if (typeof movieMsg === \"object\") console.log(`电影 《${movieMsg.movieName}》 爬取成功`)\n  return movieMsg\n}\nconst runMovieDetail = async ({restartCount = 0} = {}) => {\n  let $\n  let comingMoviesLink = []\n  let comingMovies = []\n\n  const options = {\n      uri: 'https://movie.douban.com/coming',\n      transform: body => cheerio.load(body, {decodeEntities: false})\n  }\n\n  $ = await rp(options)\n  try {\n  } catch (e) {\n    console.log(`爬取 https://movie.douban.com/coming 网站失败，准备重新开始爬取 = 。=\\\\n具体错误信息${e}`)\n    /*\n    *  需要限制重启次数，目前只能重启 4 次\n    *  超过 4 次将发送邮件通知\n    * */\n    restartCount++\n    if (restartCount <5) {\n      console.log(`目前重启次数为${restartCount}`)\n      runMovieDetail(restartCount)\n    } else {\n      console.log(`目前重启次数为${restartCount}, 重复次数过多，不可抗拒因素，将发起邮件通知`)\n    }\n    return\n  }\n\n  $('.article tbody tr').each(function (index) {\n    comingMoviesLink.push({\n      url: $(this).find(\"a\").attr('href'),\n      title: $(this).find(\"a\").html().trim(),\n      like: $(this).find(\"td\").eq(4).html().trim().match(/^[0-9]*/)[0]\n    })\n  })\n\n  console.log(`总共爬取了 ${comingMoviesLink.length} 个电影 url`)\n  // 更新当前新电影列表 url 到本地\n  fs.writeFileSync('./comingMovieUri.json', JSON.stringify(comingMoviesLink, null, 2), 'utf8')\n\n  // 爬取豆瓣即将上映电影的poster、上映日期、片长\n  for(let i = 0; i < comingMoviesLink.length; i++) {\n  // for(let i = 0; i < 5; i++) {\n    const movie = await getComingMovie({movieUrl: comingMoviesLink[i]})\n    comingMovies.push(movie)\n    console.log(`这是第${i+1}个电影，《${movie.movieName}》`)\n\n    // 更新即将上映电影的 poster、上映日期、片长 到本地\n    fs.writeFileSync('./comingMovie.json', JSON.stringify(comingMovies, null, 2), 'utf8')\n\n    await sleep(2) // 间歇 2s\n  }\n\n  console.log(`电影基本信息全部爬取成功, 共计${comingMoviesLink.length}`)\n}\n\n/*\n* 1.电影预告片列表 runMovieTrailer()\n* 2.预告片的详细uil、封面 getMovieTrailer()\n* */\nconst getMovieTrailer = async ({movieUrl, restartCount = 0} = {}) => {\n  const options = {\n    method: 'GET',\n    uri: `${movieUrl.url}trailer`,\n    encoding: \"utf-8\"\n  }\n\n  // 代理地址\n  const random = Math.floor(Math.random() * proxy.length)\n  // console.log(`随机数为${random}`)\n  options.proxy = `http://${proxyConfig.user}:${proxyConfig.password}@${proxy[random]}:${proxyConfig.port}`\n\n  // request 请求\n  const movieMsg = await new Promise( resolve => {\n    request(options, async function (error, response, body) {\n      let $\n      try {\n        if (error) throw error;\n        $ = cheerio.load(body, {decodeEntities: false})\n\n      } catch (e) {\n        nodemailer(e)\n        console.log(`爬取《${movieUrl.title}》失败，准备重新开始爬取\\n错误日志${e}\\n重启次数为${restartCount}`)\n        console.error(e);\n      }\n\n      if ($) {\n        let trailerUri = []\n        let trailerPoster = []\n        $('.article a.pr-video').each(function () {\n          trailerUri.push($(this).attr('href'))\n          trailerPoster.push($(this).find('img').attr('src'))\n        })\n        const trailer = {\n          movieName: $(\"#content>h1\").text(),\n          trailerUri: trailerUri,\n          trailerPoster: trailerPoster,\n          id: movieUrl.url.match(/\\/subject\\/(\\S*)\\//)[1]\n        }\n        resolve(trailer)\n      } else {\n        /*\n        *  需要限制重启次数，目前只能重启 4 次\n        *  超过 4 次将发送邮件通知\n        * */\n        restartCount++\n        if (restartCount < 5) {\n          await sleep(2) // 重新请求间歇 2s\n          const trailer = await getMovieTrailer({movieUrl: movieUrl, restartCount: restartCount})\n          resolve(trailer)\n        } else {\n          console.log(`目前重启次数为${restartCount}, 重复次数过多，不可抗拒因素，将发起邮件通知`)\n          resolve(`爬取失败，重启次数为${restartCount}`)\n        }\n      }\n    })\n  })\n  if (typeof movieMsg === \"object\") console.log(`电影 《${movieMsg.movieName}》 爬取成功`)\n  return movieMsg\n}\nconst runMovieTrailer = async () => {\n  let comingMoviesLink = require('../../comingMovieUri') // 全部电影的 url\n  let Trailer = []\n  console.log(comingMoviesLink.length)\n  for(let i = 0; i < comingMoviesLink.length ; i++) {\n    const trailer = await getMovieTrailer({movieUrl: comingMoviesLink[i]})\n    Trailer.push(trailer)\n    console.log(`这是第${i+1}个电影的预告片列表, ${trailer.movieName}`)\n\n    fs.writeFileSync('./comingMovieTrailer.json', JSON.stringify(Trailer, null, 2), 'utf8')\n    await sleep(2) // 间歇 2s\n  }\n  console.log(`电影预告片列表全部爬取成功, 共计${comingMoviesLink.length}`)\n}\n\n/*\n* 1.电影预告详细信息获取 runMovieTrailerDetail\n* 2.videolink、title、发布日期 getMovieTrailerDetail\n* 3.请求失败重新请求 toRequest\n* */\nconst toRequest = async ({trailerUrl, trailerPoster, restartCount = 1} = {}) => {\n  const options = {\n    method: 'GET',\n    uri: `${trailerUrl}`,\n    encoding: \"utf-8\"\n  }\n  // 代理地址\n  const random = Math.floor(Math.random() * proxy.length)\n  // console.log(`随机数为${random}`)\n  options.proxy = `http://${proxyConfig.user}:${proxyConfig.password}@${proxy[random]}:${proxyConfig.port}`;\n\n  // request 请求\n  const movieMsg =  await new Promise( resolve => {\n    request(options, async function (error, response, body) {\n      let $\n      try {\n        $ = cheerio.load(body,{decodeEntities: false})\n\n      } catch (e) {\n        nodemailer(e)\n        console.log(`爬取《${trailerUrl}》失败，准备重新开始爬取\\n错误日志${e}\\n重启次数为${restartCount}`)\n        // console.error(e);\n      }\n\n      if ($) {\n        console.log(`电影 《${trailerUrl}》 重新爬取成功,重启次数为${restartCount}`)\n\n        resolve({\n          trailerMP4: $('#movie_player source').attr('src'),\n          trailerTitle: $('h1').text(),\n          trailerDate: $('.trailer-info>span').html(),\n          trailerPoster: trailerPoster,\n          trailerId: uuid.v1().replace(/-/g, \"\")\n        })\n      } else {\n        /*\n        *  需要限制重启次数，目前只能重启 4 次\n        *  超过 4 次将发送邮件通知\n        * */\n        restartCount++\n        if (restartCount < 5) {\n          await sleep(2) // 重新请求间歇 2s\n          const trailer = await toRequest({trailerUrl: trailerUrl, restartCount: restartCount})\n          resolve(trailer)\n        } else {\n          console.log(`目前重启次数为${restartCount-1}, 重复次数过多，不可抗拒因素，将发起邮件通知`)\n          resolve(`爬取失败，重启次数为${restartCount}`)\n        }\n      }\n    })\n  })\n  if (typeof movieMsg === \"object\") console.log(`电影 《${trailerUrl}》 重新爬取成功,重启次数为${restartCount}。`)\n  return movieMsg\n}\n\nconst getMovieTrailerDetail = async (trailer) => {\n  // 判断有无预告片\n  let trailerArray = []\n  if(trailer.length !== 0) {\n    trailerArray = await Promise.all(trailer.trailerUri.map(async (item, index) => {\n      const options = {\n        method: 'GET',\n        uri: `${item}`,\n        encoding: \"utf-8\"\n      }\n      // 代理地址\n      const random = Math.floor(Math.random() * proxy.length)\n      // console.log(`随机数为${random}`)\n      options.proxy = `http://${proxyConfig.user}:${proxyConfig.password}@${proxy[random]}:${proxyConfig.port}`;\n\n      // request 请求\n      const movieMsg =  await new Promise( resolve => {\n        request(options, async function (error, response, body) {\n          let $\n          try {\n            $ = cheerio.load(body,{decodeEntities: false})\n\n          } catch (e) {\n            nodemailer(e)\n            console.log(`爬取《${trailer.movieName}》失败，准备重新开始爬取\\n错误日志${e}`)\n            // console.error(e);\n          }\n\n          if ($) {\n            resolve({\n              trailerMP4: $('#movie_player source').attr('src'),\n              trailerTitle: $('h1').text(),\n              trailerDate: $('.trailer-info>span').html(),\n              trailerPoster: trailer.trailerPoster[index],\n              // trailerId: uuid.v1().replace(/-/g, \"\")\n              trailerId: trailer.id\n            })\n          } else {\n            /*\n            *  需要限制重启次数，目前只能重启 4 次\n            *  超过 4 次将发送邮件通知\n            * */\n            await sleep(2) // 重新请求间歇 2s\n            const trailer = await toRequest({trailerUrl: item, trailerPoster: trailer.trailerPoster[index]})\n            resolve(trailer)\n          }\n        })\n      })\n      return movieMsg\n    }))\n  }\n  return {\n    trailerArray,\n    id: trailer.id,\n    trailerTitle: trailer.movieName\n  }\n}\nconst runMovieTrailerDetail = async () => {\n  let comingTrailerLink = require('../../comingMovieTrailer')\n  let Trailer = []\n\n  try {\n    for(let i = 0; i < comingTrailerLink.length ; i++) {\n      const trailer = await getMovieTrailerDetail(comingTrailerLink[i])\n      Trailer.push(trailer)\n\n      console.log(`这是第${i+1}个电影的预告详细信息, 《${trailer.trailerTitle}》`)\n\n      fs.writeFileSync('./comingMovieTrailerDetail.json', JSON.stringify(Trailer, null, 2), 'utf8')\n      await sleep(2) // 间歇 2s\n    }\n  } catch (e) {\n    nodemailer(e)\n    console.log(e)\n  }\n  console.log(`电影预告详细全部爬取成功, 共计${comingTrailerLink.length}`)\n}\n\n/*\n* 获取电影的剧照、海报\n* runMoviePhotos\n* getMoviePhotos\n* */\nconst getMoviePhotos = async ({ movieUrl, restartCount = 0} = {}) => {\n  const options = {\n    method: 'GET',\n    uri: `${movieUrl.url}/all_photos`,\n    encoding: \"utf-8\"\n  }\n  // 代理地址\n  const random = Math.floor(Math.random() * proxy.length)\n  // console.log(`随机数为${random}`)\n  options.proxy = `http://${proxyConfig.user}:${proxyConfig.password}@${proxy[random]}:${proxyConfig.port}`;\n\n  // request 请求\n  const movieMsg =  await new Promise( resolve => {\n    request(options, async function (error, response, body) {\n      let $\n      try {\n        if (error) throw error;\n        $ = cheerio.load(body,{decodeEntities: false})\n\n      } catch (e) {\n        console.log(`爬取《${movieUrl.title}》失败，准备重新开始爬取\\n错误日志${e}`)\n        nodemailer(e)\n        // console.error(e);\n      }\n      if ($) {\n        let stagePhotos = []\n        $('.article .pic-col5 li a').each(function () {\n          stagePhotos.push($(this).find('img').attr('src'))\n        })\n\n        resolve({\n          movieName: $(\"#content>h1\").text(),\n          stagePhotos: stagePhotos,\n          id: movieUrl.url.match(/\\/subject\\/(\\S*)\\//)[1]\n        })\n      } else {\n        /*\n        *  需要限制重启次数，目前只能重启 4 次\n        *  超过 4 次将发送邮件通知\n        * */\n        restartCount++\n        if (restartCount < 5) {\n          await sleep(2) // 间歇 2s\n          const photo = await getMoviePhotos({movieUrl: movieUrl, restartCount: restartCount})\n          resolve(photo)\n        } else {\n          console.log(`目前重启次数为${restartCount-1}, 重复次数过多，不可抗拒因素，将发起邮件通知`)\n          resolve(`爬取失败，重启次数为${restartCount-1}`)\n        }\n      }\n    })\n  })\n  if (typeof movieMsg === \"object\") console.log(`电影 《${movieUrl.title}》 重新爬取成功,重启次数为${restartCount}。`)\n  return movieMsg\n}\nconst runMoviePhotos = async () => {\n  let comingMoviesLink = require('../../comingMovieUri')\n  let stagePhotos = []\n\n  for(let i = 0; i < comingMoviesLink.length ; i++) {\n  // for(let i = 0; i < 10 ; i++) {\n    const photo = await getMoviePhotos({movieUrl: comingMoviesLink[i]})\n    stagePhotos.push(photo)\n\n    console.log(`这是第${i+1}个电影的剧照, ${photo.movieName}`)\n    fs.writeFileSync('./comingMovieStagePhotos.json', JSON.stringify(stagePhotos, null, 2), 'utf8')\n    // await sleep(2) // 间歇 2s\n  }\n  console.log(`电影剧照全部爬取完成, 共计${comingMoviesLink.length}`)\n}\nmodule.exports = { runMovieDetail, runMovieTrailer, runMovieTrailerDetail, runMoviePhotos }\n\n\n\n// WEBPACK FOOTER //\n// ./server/crawler/crawlerAPI.js","const qiniu = require('qiniu')\nconst request = require('request')\nconst crypto = require('crypto')\n\nconst accessKey = 'LIWJTwQKsmsTvBrNLD0k-nu62diiEFKw34NfWj9P';\nconst secretKey = 'R88bNThcj1GjiIY7D8BOANGUzCRJ6bTaC6DVE2t1';\n/*const mac = new qiniu.auth.digest.Mac(accessKey, secretKey);\n\nconst spaceName = 'filmgo'\n\nconst options = {\n  scope: spaceName,\n  expires: 7200\n};\nconst putPolicy = new qiniu.rs.PutPolicy(options);\nconst uploadToken = putPolicy.uploadToken(mac);\n\n\nconst config = new qiniu.conf.Config();\nconfig.zone = qiniu.zone.Zone_z0 // 华东\n\n\n\nconst localFile = \"./user.jpg\";\nconst formUploader = new qiniu.form_up.FormUploader(config);\nconst putExtra = new qiniu.form_up.PutExtra();\nconst key='test.png';\n// 文件上传\nformUploader.putFile(uploadToken, key, localFile, putExtra, function(respErr,respBody, respInfo) {\n  if (respErr) {\n    throw respErr;\n  }\n  if (respInfo.statusCode == 200) {\n    console.log(respBody);\n  } else {\n    console.log(respInfo.statusCode);\n    console.log(respBody);\n  }\n\n})*/\n\n\n//需要填写你的 Access Key 和 Secret Key\n/*qiniu.conf.ACCESS_KEY = accessKey\nqiniu.conf.SECRET_KEY = secretKey*/\n\n/*\n* URL安全的Base64编码\n*\n* URL安全的Base64编码适用于以URL方式传递Base64编码结果的场景。\n* 该编码方式的基本过程是先将内容以Base64格式编码为字符串，然后检查该结果字符串，将字符串中的加号+换成中划线-，并且将斜杠/换成下划线_。\n*\n* */\nfunction safe64(base64) {\n\n  base64 = base64.replace(/\\+/g, \"-\");\n  base64 = base64.replace(/\\//g, \"_\");\n  return base64;\n}\n\n/*\n* base64ToUrlSafe\n* urlSafeToBase64\n* urlsafeBase64Encode\n* urlSafeBase64Decode\n* hmacSha1\n* */\n\n\nconst uploadQiniuFile = (fileUrl, fileName) => {\n  // 管理凭证\n  function genManageToken(accessKey, secretKey, pathAndQuery, body) {\n    const data = `${pathAndQuery}\\n${body}`\n    let hash = qiniu.util.hmacSha1(data, secretKey);\n    hash = qiniu.util.base64ToUrlSafe(hash);\n    return accessKey+ \":\" +hash\n  }\n\n  // let picUrl = 'https://img1.doubanio.com/view/photo/s_ratio_poster/public/p2517591798.jpg'\n  fileUrl = qiniu.util.urlsafeBase64Encode(fileUrl)\n  let bucket = 'filmgo'\n  // let key = 'p2517591798.png'\n  let key = fileName\n  bucket = qiniu.util.encodedEntry(bucket, key)\n\n  const path = \"/fetch/\" + fileUrl + \"/to/\" + bucket;\n  const fetchUrl = \"http://iovip.qbox.me\" + path;\n\n  const targetOptions = {\n    method: 'POST',\n    url: fetchUrl,\n    headers: {\n      'Authorization': \"QBox \" + genManageToken(accessKey, secretKey, path, \"\"),\n      'Content-Type': 'application/json',\n    }\n  }\n\n  return new Promise((resolve, reject) => {\n    request(targetOptions, function (error, response, body) {\n      try {\n\n        if (error) throw error;\n        console.log(body)\n        resolve(body)\n\n      } catch (e) {\n        reject(e)\n      }\n    })\n  })\n}\n\nmodule.exports = { uploadQiniuFile }\n\n\n\n// WEBPACK FOOTER //\n// ./server/middleware/qiniu.js","module.exports = []\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./comingMovie.json\n// module id = 26\n// module chunks = 0","module.exports = []\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./comingMovieStagePhotos.json\n// module id = 27\n// module chunks = 0","module.exports = []\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./comingMovieTrailer.json\n// module id = 28\n// module chunks = 0","module.exports = []\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./comingMovieTrailerDetail.json\n// module id = 29\n// module chunks = 0","var map = {\n\t\"./admin\": 7,\n\t\"./admin.js\": 7,\n\t\"./category\": 8,\n\t\"./category.js\": 8,\n\t\"./comment\": 9,\n\t\"./comment.js\": 9,\n\t\"./flim\": 2,\n\t\"./flim.js\": 2,\n\t\"./genre\": 3,\n\t\"./genre.js\": 3,\n\t\"./user\": 10,\n\t\"./user.js\": 10\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 30;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server/database/schema ^\\.\\/.*$\n// module id = 30\n// module chunks = 0","module.exports = require(\"axios\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"axios\"\n// module id = 31\n// module chunks = 0","module.exports = require(\"bcryptjs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bcryptjs\"\n// module id = 32\n// module chunks = 0","module.exports = require(\"cheerio\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cheerio\"\n// module id = 33\n// module chunks = 0","module.exports = require(\"crypto\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"crypto\"\n// module id = 34\n// module chunks = 0","module.exports = require(\"ejs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ejs\"\n// module id = 35\n// module chunks = 0","module.exports = require(\"koa-router\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-router\"\n// module id = 36\n// module chunks = 0","module.exports = require(\"node-uuid\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"node-uuid\"\n// module id = 37\n// module chunks = 0","module.exports = require(\"nodemailer\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"nodemailer\"\n// module id = 38\n// module chunks = 0","module.exports = require(\"qiniu\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"qiniu\"\n// module id = 39\n// module chunks = 0","module.exports = require(\"regenerator-runtime\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"regenerator-runtime\"\n// module id = 40\n// module chunks = 0","module.exports = require(\"request-promise\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"request-promise\"\n// module id = 41\n// module chunks = 0","import Koa from 'koa'\nimport { Nuxt, Builder } from 'nuxt'\nimport schedule from 'node-schedule'\n// after end\n\nimport session from 'koa-session'\n\nimport cors from 'koa2-cors'\n\nconst filmApi = require('./router')\nconst mongodb = require('./database/database')\nconst bodyParser = require('koa-bodyparser')\n\nconst crawler = require('./crawler/index')\nconst nodemailer = require('./middleware/nodemail')\n\nasync function start () {\n  const app = new Koa()\n  const host = process.env.HOST || '127.0.0.1'\n  const port = process.env.PORT || 5000\n\n  // Import and Set Nuxt.js options\n  let config = require('../nuxt.config.js')\n  config.dev = !(app.env === 'production')\n\n  // Instantiate nuxt.js\n  const nuxt = new Nuxt(config)\n\n  // Build in development\n  if (config.dev) {\n    const builder = new Builder(nuxt)\n    await builder.build()\n  }\n  app.use(cors({\n    origin: function (ctx) {\n      return 'http://localhost:7998'\n    },\n    exposeHeaders: ['WWW-Authenticate', 'Server-Authorization'],\n    maxAge: 5,\n    credentials: true,\n    allowMethods: ['GET', 'POST', 'DELETE'],\n    allowHeaders: ['Content-Type', 'Authorization', 'Accept']\n  }))\n  // body-parser\n  app.use(bodyParser())\n\n  // mongodb\n  mongodb()\n\n  // session\n  app.keys = ['some session']\n\n  const CONFIG = {\n    key: 'SESSION', /** (string) cookie key (default is koa:sess) */\n    /** (number || 'session') maxAge in ms (default is 1 days) */\n    /** 'session' will result in a cookie that expires when session/browser is closed */\n    /** Warning: If a session cookie is stolen, this cookie will never expire */\n    maxAge: 86400000,\n    overwrite: true, /** (boolean) can overwrite or not (default true) */\n    httpOnly: true, /** (boolean) httpOnly or not (default true) */\n    signed: true, /** (boolean) signed or not (default true) */\n    rolling: false /** (boolean) Force a session identifier cookie to be set on every response. The expiration is reset to the original maxAge, resetting the expiration countdown. default is false **/\n  }\n  app.use(session(CONFIG, app))\n\n  // 定时爬虫\n  const scheduleRecurrenceRule = () => {\n\n    let rule = new schedule.RecurrenceRule();\n    rule.hour = 15\n    rule.minute = 15\n    rule.second = 0\n\n    schedule.scheduleJob(rule, function(){\n      nodemailer()\n      console.log('scheduleRecurrenceRule:' + new Date());\n      crawler()\n    });\n  }\n  crawler()\n  scheduleRecurrenceRule()\n  // routes\n  app.use(filmApi.routes(), filmApi.allowedMethods())\n\n  app.use(async (ctx, next) => {\n    await next()\n    ctx.status = 200 // koa defaults to 404 when it sees that status is unset\n    ctx.req.session = ctx.session\n    return new Promise((resolve, reject) => {\n      ctx.res.on('close', resolve)\n      ctx.res.on('finish', resolve)\n      nuxt.render(ctx.req, ctx.res, promise => {\n        // nuxt.render passes a rejected promise into callback on error.\n        promise.then(resolve).catch(reject)\n      })\n    })\n  })\n\n  app.listen(port, host)\n  console.log('Server listening on ' + host + ':' + port) // eslint-disable-line no-console\n}\n\nstart()\n\n\n\n// WEBPACK FOOTER //\n// ./server/index.js"],"sourceRoot":""}